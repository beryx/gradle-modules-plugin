plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.0'
    id 'maven-publish' // used for publishing to local maven repository
}

group 'org.javamodularity'
version '1.2.1'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.6.23'
    implementation 'org.ow2.asm:asm:7.0'

    testImplementation gradleTestKit()
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    useJUnitPlatform()

    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

// Add the classpath file to the test runtime classpath
dependencies {
    testRuntimeOnly files(createClasspathManifest)
}

gradlePlugin {
    plugins {
        modulesPlugin {
            id = 'org.javamodularity.moduleplugin'
            displayName = 'Java Modularity Gradle Plugin'
            description = 'Plugin that makes it easy to work with the Java Platform Module System'
            implementationClass = 'org.javamodularity.moduleplugin.ModuleSystemPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/java9-modularity/gradle-modules-plugin'
    vcsUrl = 'git@github.com:java9-modularity/gradle-modules-plugin.git'
    tags = ['java', 'modules', 'jpms', 'modularity']
}

publishing { // used for publishing to local maven repository
    publications {
        maven(MavenPublication) {
            groupId = 'org.javamodularity'
            artifactId = 'moduleplugin'
            version = project.version
        }
    }
}